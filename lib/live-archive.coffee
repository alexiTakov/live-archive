
fs         = require 'fs'
moment     = require 'moment'

module.exports =

  activate: ->
    atom.workspaceView.command "live-archive:open", => @open()

  open: ->
    text = ''
    add = (txt) -> text += (txt ? '') + '\n'

    printSection = (title, data) ->
      hdr = '\n' + title + '\n'
      for i in [0...title.length] then hdr += '-'
      add hdr

      maxS = maxC = maxT = 0
      for label, c of data
        maxS = Math.max maxS, c.sloc
        maxC = Math.max maxC, c.cloc
        maxT = Math.max maxT, c.loc
        ws = ('' + maxS).length + 1
        wc = ('' + maxC).length + 1
        wt = ('' + maxT).length + 1

      lines = ([label, c] for label, c of data)
      lines.sort()
      for line in lines
        [label, c] = line
        add pad(c.sloc, ws) + pad(c.cloc, wc) + pad(c.loc, wt) + '  ' + label

    atom.workspaceView.open('Line Count').then (editor) ->
      rootDirPath = atom.project.getRootDirectory().path

      files    = {}
      typeData = {}
      dirs     = {}
      total    = {}

      filewalker(rootDirPath, maxPending: 4).on("file", (path, stats, absPath) ->

          sfxMatch = /\.([^\.]+)$/.exec path
          if sfxMatch and
              (sfx = sfxMatch[1]) in suffixes and
              path.indexOf('node_modules') is -1
            code = fs.readFileSync absPath, 'utf8'
            try
              counts = sloc code, sfx
            catch e
              add 'Warning: ' + e.message
              return

            dirParts = path.split '/'
            dir = ''
            for dirPart, idx in dirParts
              if idx is dirParts.length-1 then break
              dir += dirPart
              addAttrs dir, dirs, counts
              dir += '/'
            files[path] = counts
            addAttrs sfx, typeData, counts
            addAttrs  '', total,    counts

        ).on("error", (err) ->
          add err.message

        ).on("done", ->
          add '\nLine counts for project ' + rootDirPath + '.'
          add 'Generated by the Atom editor package Line-Count on ' +
              moment().format 'MMMM D YYYY H:mm.'
          add 'Counts are in order of source, comments, and total.'

          printSection 'Files',       files
          printSection 'Directories', dirs
          printSection 'Types',       typeData
          printSection 'Total',       total

          editor.setText text

        ).walk()
